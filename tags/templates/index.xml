<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>templates on 大香蕉</title>
    <link>https://zkyue.github.io/tags/templates/</link>
    <description>Recent content in templates on 大香蕉</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 02 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zkyue.github.io/tags/templates/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://zkyue.github.io/post/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zkyue.github.io/post/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates. The Go docs provide more details.
Introduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer.</description>
    </item>
    
  </channel>
</rss>