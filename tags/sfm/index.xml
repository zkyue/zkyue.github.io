<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SFM on Cayman</title>
    <link>https://example.com/tags/sfm/</link>
    <description>Recent content in SFM on Cayman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Jul 2019 14:26:00 +0800</lastBuildDate>
    
	<atom:link href="https://example.com/tags/sfm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Structure from Motion</title>
      <link>https://example.com/posts/sfm/</link>
      <pubDate>Sun, 07 Jul 2019 14:26:00 +0800</pubDate>
      
      <guid>https://example.com/posts/sfm/</guid>
      <description>Structure‐from‐Motion 要解决的问题是从多张图片或者视频流中恢复物体的三维结构和相机位姿。可以通过构建相机模型然后对重投影误差进行优化来求解。
Formulation Input: $p{ij}=(v{ij},u_{ij})$ 第 $i$ 个对应点在第 $j$ 张图片的位置
Output：
 $X_i$, 对应点$p_i$ 的三维坐标 $R_j, t_j$, 第 $ j$ 个相机的旋转和平移  Cost： $$ g(X,R,T)=\sum{i=1}^m\sum{j=1}^m\begin{Vmatrix} P(X_i,R_j,tj)- \left[\begin{matrix} u{i,j} v_{i,j} \end{matrix}\right] \end{Vmatrix} ^2 \tag{1} $$
Bundle Adjustment 对上面的 Cost 函数进行优化叫做 Bundle Adjustment， 取自对通过一个点的一捆光线进行调整之意，一个很 intuitive 的名字。
Bundle Adjustment 一般采用 Levenberg‐Marquardt 进行优化，它是 Gauss‐Newton 的改进版。
Gauss‐Newton Gauss‐Newton 可以解决任意的非线性优化问题，工作过程如下：
 对待优化函数取一阶近似：  $$ f(P_i+\Delta)\approx f(P_i)+J\Delta $$
 最小化该一阶近似：  $$ \Delta=\mathop{\arg\min}\ \ | f(P_i)+J\Delta|^2 $$</description>
    </item>
    
  </channel>
</rss>